{"version":3,"sources":["recon.min.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","recon","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"Field","Attr","key","value","Extant","Slot","Record","items","index","record","__proto__","prototype","size","RecordBuilder","ValueBuilder","StringIterator","string","StringIteratee","StringBuilder","DataBuilder","buffer","offset","aliased","p","q","parse","input","result","DocumentParser","run","state","isSpace","c","isNewline","isWhitespace","isNameStartChar","isNameChar","isBase64Char","BlockParser","builder","AttrParser","ident","IdentParser","BlockValueParser","field","InlineValueParser","RecordParser","MarkupParser","text","StringParser","DataParser","data","NumberParser","isField","isAttr","isSlot","Object","create","constructor","Function","isEmpty","isExtant","Absent","isAbsent","appendField","push","appendValue","isDone","head","c1","charCodeAt","c2","step","Done","isCont","isError","feed","next","error","unexpectedEOF","append","String","fromCharCode","expand","base","Math","max","prepare","array","Uint8Array","set","appendByte","decodeBase64Digit","decodeBase64Quantum","x","y","z","w","appendBase64Char","subarray","found","expected","done","Number"],"mappings":"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","file":"recon.min.js","sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.recon = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\n\nfunction Field() {}\nField.prototype.isField = true;\nField.prototype.isAttr = false;\nField.prototype.isSlot = false;\n\nfunction Attr(key, value) {\n  Field.call(this);\n  this.key = key;\n  this.value = typeof value === 'undefined' ? Extant : value;\n}\nAttr.prototype = Object.create(Field.prototype);\nAttr.prototype.constructor = Attr;\nAttr.prototype.isAttr = true;\n\nfunction Slot(key, value) {\n  Field.call(this);\n  this.key = key;\n  this.value = typeof value === 'undefined' ? Extant : value;\n}\nSlot.prototype = Object.create(Field.prototype);\nSlot.prototype.constructor = Slot;\nSlot.prototype.isSlot = true;\n\n\nfunction Record(items, index) {\n  var record = function(key) {\n    var value = index[key];\n    if (typeof value === 'undefined' && typeof key === 'number') value = items[key];\n    return value;\n  };\n  record.__proto__ = Record.prototype;\n  record.size = items.length;\n  return record;\n}\nRecord.prototype = Object.create(Function.prototype);\nRecord.prototype.constructor = Record;\nRecord.prototype.isEmpty = function () {\n  return this.size === 0;\n};\n\n\nvar Extant = {\n  isExtant: true\n};\n\n\nvar Absent = {\n  isAbsent: true\n};\n\n\nfunction RecordBuilder() {\n  this.items = [];\n  this.index = {};\n}\nRecordBuilder.prototype.appendField = function (field) {\n  this.items.push(field);\n  this.index[field.key] = field.value;\n};\nRecordBuilder.prototype.appendValue = function (value) {\n  this.items.push(value);\n};\nRecordBuilder.prototype.state = function () {\n  return new Record(this.items, this.index);\n};\n\nfunction ValueBuilder() {\n  this.items = null;\n  this.index = null;\n  this.value = null;\n}\nValueBuilder.prototype.appendField = function (field) {\n  if (!this.items) {\n    this.items = [];\n    this.index = {};\n    if (this.value) {\n      this.items.push(this.value);\n      this.value = null;\n    }\n  }\n  this.items.push(field);\n  this.index[field.key] = field.value;\n};\nValueBuilder.prototype.appendValue = function (value) {\n  if (this.items) this.items.push(value);\n  else if (!this.value) this.value = value;\n  else {\n    this.items = [];\n    this.index = {};\n    this.items.push(this.value);\n    this.value = null;\n    this.items.push(value);\n  }\n};\nValueBuilder.prototype.state = function () {\n  if (this.value) return this.value;\n  else if (this.items) return new Record(this.items, this.index);\n  else return Absent;\n};\n\n\nfunction StringIterator(string, index) {\n  this.string = string || '';\n  this.index = index || 0;\n}\nStringIterator.prototype.isDone = function () {\n  return false;\n};\nStringIterator.prototype.isEmpty = function () {\n  return this.index >= this.string.length;\n};\nStringIterator.prototype.head = function () {\n  var c1 = this.string.charCodeAt(this.index);\n  if (c1 <= 0xD7FF || c1 >= 0xE000) return c1; // U+0000..U+D7FF | U+E000..U+FFFF\n  else if (c1 <= 0xDBFF && this.index + 1 < this.string.length) { // c1 >= 0xD800\n    var c2 = this.string.charCodeAt(this.index + 1);\n    if (c2 >= 0xDC00 && c2 <= 0xDFFF) // U+10000..U+10FFFF\n      return (((c1 & 0x3FF) << 10) | (c2 & 0x3FF)) + 0x10000;\n    else return 0xFFFD;\n  }\n  else return 0xFFFD;\n};\nStringIterator.prototype.step = function () {\n  var c1 = this.string.charCodeAt(this.index);\n  if (c1 <= 0xD7FF || c1 >= 0xE000) // U+0000..U+D7FF | U+E000..U+FFFF\n    this.index += 1;\n  else if (c1 <= 0xDBFF && this.index + 1 < this.string.length) { // c1 >= 0xD800\n    var c2 = this.string.charCodeAt(this.index + 1);\n    if (c2 >= 0xDC00 && c2 <= 0xDFFF) // U+10000..U+10FFFF\n      this.index += 2;\n    else this.index += 1;\n  }\n  else this.index += 1;\n};\n\nStringIterator.Done = {\n  isDone: function () {\n    return true;\n  },\n  isEmpty: function () {\n    return true;\n  },\n  head: function () {\n    throw 'head of empty iterator';\n  },\n  step: function () {\n    throw 'empty iterator step';\n  }\n};\nStringIterator.Done.prototype = Object.create(StringIterator.prototype);\n\n\nfunction StringIteratee() {}\nStringIteratee.prototype.isCont = function () {\n  return true;\n};\nStringIteratee.prototype.isDone = function () {\n  return false;\n};\nStringIteratee.prototype.isError = function () {\n  return false;\n};\nStringIteratee.prototype.feed = function (input) {\n  return this;\n};\nStringIteratee.prototype.run = function (input) {\n  var next = this;\n  while (!input.isEmpty() && next.isCont()) next = next.feed(input);\n  if (input.isEmpty() && !input.isDone() && next.isCont()) next = next.feed(StringIterator.Done);\n  return next;\n};\n\nStringIteratee.Done = function (value) {\n  StringIteratee.call(this);\n  this.value = value;\n};\nStringIteratee.Done.prototype = Object.create(StringIteratee.prototype);\nStringIteratee.Done.prototype.constructor = StringIteratee.Done;\nStringIteratee.Done.prototype.isCont = function () {\n  return false;\n};\nStringIteratee.Done.prototype.isDone = function () {\n  return true;\n};\nStringIteratee.Done.prototype.feed = function (input) {\n  return this;\n};\nStringIteratee.Done.prototype.state = function () {\n  return this.value;\n};\n\nStringIteratee.Error = function (error) {\n  StringIteratee.call(this);\n  this.error = error;\n};\nStringIteratee.Error.prototype = Object.create(StringIteratee.prototype);\nStringIteratee.Error.prototype.constructor = StringIteratee.Error;\nStringIteratee.Error.prototype.isCont = function () {\n  return false;\n};\nStringIteratee.Error.prototype.isError = function () {\n  return true;\n};\nStringIteratee.Error.prototype.feed = function (input) {\n  return this;\n};\nStringIteratee.Error.prototype.state = function () {\n  throw this.error;\n};\n\nStringIteratee.unexpectedEOF = new StringIteratee.Error('unexpected end of input');\n\n\nfunction StringBuilder() {\n  this.string = '';\n}\nStringBuilder.prototype.append = function (c) {\n  if ((c >= 0x0000 && c <= 0xD7FF) ||\n      (c >= 0xE000 && c <= 0xFFFF)) { // U+0000..U+D7FF | U+E000..U+FFFF\n    this.string += String.fromCharCode(c);\n  }\n  else if (c >= 0x10000 && c <= 0x10FFFF) { // U+10000..U+10FFFF\n    var u = c - 0x10000;\n    this.string += String.fromCharCode(0xD800 | (u >>> 10), 0xDC00 | (u & 0x3FF));\n  }\n  else { // invalid code point\n    this.string += String.fromCharCode(0xFFFD);\n  }\n};\nStringBuilder.prototype.state = function () {\n  return this.string;\n};\n\n\nfunction DataBuilder() {\n  this.buffer = null;\n  this.offset = 0;\n  this.aliased = true;\n  this.p = 0;\n  this.q = 0;\n  this.r = 0;\n  this.s = 0;\n}\nDataBuilder.expand = function (base, size) {\n  var n = Math.max(base, size) - 1;\n  n |= n >> 1; n |= n >> 2; n |= n >> 4; n |= n >> 8;\n  return n + 1;\n};\nDataBuilder.prototype.prepare = function (size) {\n  if (this.aliased || size > this.buffer.length) {\n    var array = new Uint8Array(DataBuilder.expand(256, size));\n    if (this.buffer) array.set(this.buffer);\n    this.buffer = array;\n    this.aliased = false;\n  }\n};\nDataBuilder.prototype.appendByte = function (value) {\n  this.prepare(this.offset + 1);\n  this.buffer[this.offset] = value;\n  this.offset += 1;\n};\nDataBuilder.prototype.decodeBase64Digit = function (c) {\n  if (c >= 65/*'A'*/ && c <= 90/*'Z'*/) return c - 65/*'A'*/;\n  else if (c >= 97/*'a'*/ && c <= 122/*'z'*/) return c - 71/*'a' - 26*/;\n  else if (c >= 48/*'0'*/ && c <= 57/*'9'*/) return c + 4/*52 - '0'*/;\n  else if (c === 43/*'+'*/ || c === 45/*'-'*/) return 62;\n  else if (c === 47/*'/'*/ || c === 95/*'_'*/) return 63;\n};\nDataBuilder.prototype.decodeBase64Quantum = function () {\n  var x = this.decodeBase64Digit(this.p);\n  var y = this.decodeBase64Digit(this.q);\n  if (this.r !== 61/*'='*/) {\n    var z = this.decodeBase64Digit(this.r);\n    if (this.s !== 61/*'='*/) {\n      var w = this.decodeBase64Digit(this.s);\n      this.appendByte((x << 2) | (y >>> 4));\n      this.appendByte((y << 4) | (z >>> 2));\n      this.appendByte((z << 6) | w);\n    }\n    else {\n      this.appendByte((x << 2) | (y >>> 4));\n      this.appendByte((y << 4) | (z >>> 2));\n    }\n  }\n  else {\n    if (this.s !== 61/*'='*/) throw 'incomplete base64 quantum';\n    this.appendByte((x << 2) | (y >>> 4));\n  }\n};\nDataBuilder.prototype.appendBase64Char = function (c) {\n  if (this.p === 0) this.p = c;\n  else if (this.q === 0) this.q = c;\n  else if (this.r === 0) this.r = c;\n  else {\n    this.s = c;\n    this.decodeBase64Quantum();\n    this.s = 0;\n    this.r = 0;\n    this.q = 0;\n    this.p = 0;\n  }\n};\nDataBuilder.prototype.state = function (value) {\n  if (!this.buffer) this.buffer = new Uint8Array(0);\n  else if (this.buffer.length !== this.offset) {\n    var array = new Uint8Array(this.offset);\n    array.set(this.buffer.subarray(0, this.offset));\n    this.buffer = array;\n  }\n  this.aliased = true;\n  return this.buffer;\n};\n\n\nfunction parse(s) {\n  var input = new StringIterator(s);\n  var result = new DocumentParser().run(input);\n  return result.state();\n}\n\n\nfunction isSpace(c) {\n  return c === 0x20 || c === 0x9;\n}\nfunction isNewline(c) {\n  return c === 0xA || c === 0xD;\n}\nfunction isWhitespace(c) {\n  return isSpace(c) || isNewline(c);\n}\nfunction isNameStartChar(c) {\n  return (\n    c >= 65/*'A'*/ && c <= 90/*'Z'*/ ||\n    c === 95/*'_'*/ ||\n    c >= 97/*'a'*/ && c <= 122/*'z'*/ ||\n    c >= 0xC0 && c <= 0xD6 ||\n    c >= 0xD8 && c <= 0xF6 ||\n    c >= 0xF8 && c <= 0x2FF ||\n    c >= 0x370 && c <= 0x37D ||\n    c >= 0x37F && c <= 0x1FFF ||\n    c >= 0x200C && c <= 0x200D ||\n    c >= 0x2070 && c <= 0x218F ||\n    c >= 0x2C00 && c <= 0x2FEF ||\n    c >= 0x3001 && c <= 0xD7FF ||\n    c >= 0xF900 && c <= 0xFDCF ||\n    c >= 0xFDF0 && c <= 0xFFFD ||\n    c >= 0x10000 && c <= 0xEFFFF);\n}\nfunction isNameChar(c) {\n  return (\n    c === 45/*'-'*/ ||\n    c >= 48/*'0'*/ && c <= 57/*'9'*/ ||\n    c >= 65/*'A'*/ && c <= 90/*'Z'*/ ||\n    c === 95/*'_'*/ ||\n    c >= 97/*'a'*/ && c <= 122/*'z'*/ ||\n    c === 0xB7 ||\n    c >= 0xC0 && c <= 0xD6 ||\n    c >= 0xD8 && c <= 0xF6 ||\n    c >= 0xF8 && c <= 0x37D ||\n    c >= 0x37F && c <= 0x1FFF ||\n    c >= 0x200C && c <= 0x200D ||\n    c >= 0x203F && c <= 0x2040 ||\n    c >= 0x2070 && c <= 0x218F ||\n    c >= 0x2C00 && c <= 0x2FEF ||\n    c >= 0x3001 && c <= 0xD7FF ||\n    c >= 0xF900 && c <= 0xFDCF ||\n    c >= 0xFDF0 && c <= 0xFFFD ||\n    c >= 0x10000 && c <= 0xEFFFF);\n}\nfunction isBase64Char(c) {\n  return (\n    c >= 48/*'0'*/ && c <= 57/*'9'*/ ||\n    c >= 65/*'A'*/ && c <= 90/*'Z'*/ ||\n    c >= 97/*'a'*/ && c <= 122/*'z'*/ ||\n    c === 43/*'+'*/ || c === 45/*'-'*/ ||\n    c === 47/*'/'*/ || c === 95/*'_'*/);\n}\n\n\nfunction DocumentParser(value) {\n  StringIteratee.call(this);\n  this.value = value || new BlockParser();\n}\nDocumentParser.prototype = Object.create(StringIteratee.prototype);\nDocumentParser.prototype.constructor = DocumentParser;\nDocumentParser.prototype.feed = function (input) {\n  var value = this.value;\n  while ((!input.isEmpty() || input.isDone()) && value.isCont()) value = value.feed(input);\n  if (value.isError()) return value;\n  if (value.isDone()) {\n    if (!input.isEmpty()) return new StringIteratee.Error({found: input.head()});\n    else if (input.isDone()) return value;\n  }\n  return new DocumentParser(value);\n};\n\n\nfunction BlockParser(builder, key, value, s) {\n  StringIteratee.call(this);\n  this.builder = builder || null;\n  this.key = key || null;\n  this.value = value || null;\n  this.s = s || 1;\n}\nBlockParser.prototype = Object.create(StringIteratee.prototype);\nBlockParser.prototype.constructor = BlockParser;\nBlockParser.prototype.feed = function (input) {\n  var c = 0;\n  var s = this.s;\n  var value = this.value;\n  var key = this.key;\n  var builder = this.builder || new ValueBuilder();\n  while (!input.isEmpty() || input.isDone()) {\n    if (s === 1) {\n      while (!input.isEmpty() && (c = input.head(), isWhitespace(c))) input.step();\n      if (!input.isEmpty()) s = 2;\n      else if (input.isDone()) return new StringIteratee.Done(builder.state());\n    }\n    if (s === 2) {\n      key = key || new BlockValueParser();\n      while ((!input.isEmpty() || input.isDone()) && key.isCont()) key = key.feed(input);\n      if (key.isDone()) s = 3;\n      else if (key.isError()) return key;\n    }\n    if (s === 3) {\n      while (!input.isEmpty() && (c = input.head(), isSpace(c))) input.step();\n      if (!input.isEmpty()) {\n        if (c === 58/*':'*/) {\n          input.step();\n          s = 4;\n        }\n        else {\n          builder.appendValue(key.state());\n          key = null;\n          s = 6;\n        }\n      }\n      else if (input.isDone()) {\n        builder.appendValue(key.state());\n        return new StringIteratee.Done(builder.state());\n      }\n    }\n    if (s === 4) {\n      while (!input.isEmpty() && isSpace(input.head())) input.step();\n      if (!input.isEmpty()) s = 5;\n      else if (input.isDone()) {\n        builder.appendField(new Slot(key.state()));\n        return new StringIteratee.Done(builder.state());\n      }\n    }\n    if (s === 5) {\n      value = value || new BlockValueParser();\n      while ((!input.isEmpty() || input.isDone()) && value.isCont()) value = value.feed(input);\n      if (value.isDone()) {\n        builder.appendField(new Slot(key.state(), value.state()));\n        key = null;\n        value = null;\n        s = 6;\n      }\n      else if (value.isError()) return value;\n    }\n    if (s === 6) {\n      while (!input.isEmpty() && (c = input.head(), isSpace(c))) input.step();\n      if (!input.isEmpty()) {\n        if (c === 44/*','*/ || c === 59/*';'*/ || isNewline(c)) {\n          input.step();\n          s = 1;\n        }\n        else return new StringIteratee.Done(builder.state());\n      }\n      else if (input.isDone()) return new StringIteratee.Done(builder.state());\n    }\n  }\n  return new BlockParser(builder, key, value, s);\n};\n\n\nfunction AttrParser(ident, value, s) {\n  StringIteratee.call(this);\n  this.ident = ident || new IdentParser();\n  this.value = value || new BlockParser();\n  this.s = s || 1;\n}\nAttrParser.prototype = Object.create(StringIteratee.prototype);\nAttrParser.prototype.constructor = AttrParser;\nAttrParser.prototype.feed = function (input) {\n  var c = 0;\n  var s = this.s;\n  var value = this.value;\n  var ident = this.ident;\n  if (s === 1) {\n    if (!input.isEmpty() && (c = input.head(), c === 64/*'@'*/)) {\n      input.step();\n      s = 2;\n    }\n    else if (!input.isEmpty()) return new StringIteratee.Error({expected: '\\'@\\'', found: c});\n    else if (input.isDone()) return StringIteratee.unexpectedEOF;\n  }\n  if (s === 2) {\n    ident = ident.feed(input);\n    if (ident.isDone()) s = 3;\n    else if (ident.isError()) return ident;\n  }\n  if (s === 3) {\n    if (!input.isEmpty() && input.head() === 40/*'('*/) {\n      input.step();\n      s = 4;\n    }\n    else if (!input.isEmpty() || input.isDone()) return new StringIteratee.Done(new Attr(ident.state()));\n  }\n  if (s === 4) {\n    while (!input.isEmpty() && (c = input.head(), isWhitespace(c))) input.step();\n    if (!input.isEmpty()) {\n      if (c === 41/*')'*/) {\n        input.step();\n        return new StringIteratee.Done(new Attr(ident.state()));\n      }\n      else s = 5;\n    }\n    else if (input.isDone()) return StringIteratee.unexpectedEOF;\n  }\n  if (s === 5) {\n    while ((!input.isEmpty() || input.isDone()) && value.isCont()) value = value.feed(input);\n    if (value.isDone()) s = 6;\n    else if (value.isError()) return value;\n  }\n  if (s === 6) {\n    while (!input.isEmpty() && (c = input.head(), isWhitespace(c))) input.step();\n    if (!input.isEmpty()) {\n      if (c === 41/*')'*/) {\n        input.step();\n        return new StringIteratee.Done(new Attr(ident.state(), value.state()));\n      }\n      else return new StringIteratee.Error({expected: '\\')\\'', found: c});\n    }\n    else if (input.isDone()) return StringIteratee.unexpectedEOF;\n  }\n  return new AttrParser(ident, value, s);\n};\n\n\nfunction BlockValueParser(builder, field, value, s) {\n  StringIteratee.call(this);\n  this.builder = builder || null;\n  this.field = field || null;\n  this.value = value || null;\n  this.s = s || 1;\n}\nBlockValueParser.prototype = Object.create(StringIteratee.prototype);\nBlockValueParser.prototype.constructor = BlockValueParser;\nBlockValueParser.prototype.feed = function (input) {\n  var c = 0;\n  var s = this.s;\n  var value = this.value;\n  var field = this.field;\n  var builder = this.builder;\n  while (!input.isEmpty() || input.isDone()) {\n    if (s === 1) {\n      if (!input.isEmpty()) {\n        c = input.head();\n        if (c === 64/*'@'*/) {\n          field = new AttrParser();\n          s = 2;\n        }\n        else if (c === 123/*'{'*/) {\n          if (builder) {\n            value = new RecordParser(builder);\n            s = 5;\n          }\n          else {\n            value = new RecordParser();\n            s = 4;\n          }\n        }\n        else if (c === 91/*'['*/) {\n          if (builder) {\n            value = new MarkupParser(builder);\n            s = 5;\n          }\n          else {\n            value = new MarkupParser();\n            s = 4;\n          }\n        }\n        else if (c === 34/*'\"'*/) {\n          value = new StringParser();\n          s = 4;\n        }\n        else if (c === 37/*'%'*/) {\n          value = new DataParser();\n          s = 4;\n        }\n        else if (c === 45/*'-'*/ || c >= 48/*'0'*/ && c <= 57/*'9'*/) {\n          value = new NumberParser();\n          s = 4;\n        }\n        else if (isNameStartChar(c)) {\n          value = new IdentParser();\n          s = 4;\n        }\n        else if (!builder) return new StringIteratee.Done(Absent);\n        else return new StringIteratee.Done(builder.state());\n      }\n      else if (input.isDone()) {\n        if (!builder) return new StringIteratee.Done(Absent);\n        else return new StringIteratee.Done(builder.state());\n      }\n    }\n    if (s === 2) {\n      while ((!input.isEmpty() || input.isDone()) && field.isCont()) field = field.feed(input);\n      if (field.isDone()) {\n        builder = builder || new ValueBuilder();\n        builder.appendField(field.state());\n        field = null;\n        s = 3;\n      }\n      else if (field.isError()) return field;\n    }\n    if (s === 3) {\n      while (!input.isEmpty() && isSpace(input.head())) input.step();\n      if (!input.isEmpty()) s = 1;\n      else if (input.isDone()) return new StringIteratee.Done(builder.state());\n    }\n    if (s === 4) {\n      while ((!input.isEmpty() || input.isDone()) && value.isCont()) value = value.feed(input);\n      if (value.isDone()) {\n        builder = builder || new ValueBuilder();\n        builder.appendValue(value.state());\n        return new StringIteratee.Done(builder.state());\n      }\n      else if (value.isError()) return value;\n    }\n    if (s === 5) {\n      while ((!input.isEmpty() || input.isDone()) && value.isCont()) value = value.feed(input);\n      if (value.isDone()) return new StringIteratee.Done(builder.state());\n      else if (value.isError()) return value;\n    }\n  }\n  return new BlockValueParser(builder, field, value, s);\n};\n\n\nfunction InlineValueParser(builder, field, value, s) {\n  StringIteratee.call(this);\n  this.builder = builder || null;\n  this.field = field || null;\n  this.value = value || null;\n  this.s = s || 1;\n}\nInlineValueParser.prototype = Object.create(StringIteratee.prototype);\nInlineValueParser.prototype.constructor = InlineValueParser;\nInlineValueParser.prototype.feed = function (input) {\n  var c = 0;\n  var s = this.s;\n  var value = this.value;\n  var field = this.field;\n  var builder = this.builder;\n  while (!input.isEmpty() || input.isDone()) {\n    if (s === 1) {\n      if (!input.isEmpty()) {\n        c = input.head();\n        if (c === 64/*'@'*/) {\n          field = new AttrParser();\n          s = 2;\n        }\n        else if (c === 123/*'{'*/) {\n          if (builder) {\n            value = new RecordParser(builder);\n            s = 5;\n          }\n          else {\n            value = new RecordParser();\n            s = 4;\n          }\n        }\n        else if (c === 91/*'['*/) {\n          if (builder) {\n            value = new MarkupParser(builder);\n            s = 5;\n          }\n          else {\n            value = new MarkupParser();\n            s = 4;\n          }\n        }\n        else if (!builder) return new StringIteratee.Done(Absent);\n        else return new StringIteratee.done(builder.state());\n      }\n      else if (input.isDone()) {\n        if (!builder) return new StringIteratee.Done(Absent);\n        else return new StringIteratee.Done(builder.state());\n      }\n    }\n    if (s === 2) {\n      while ((!input.isEmpty() || input.isDone()) && field.isCont()) field = field.feed(input);\n      if (field.isDone()) {\n        builder = builder || new ValueBuilder();\n        builder.appendField(field.state());\n        field = null;\n        s = 3;\n      }\n      else if (field.isError()) return field;\n    }\n    if (s === 3) {\n      while (!input.isEmpty() && isSpace(input.head())) input.step();\n      if (!input.isEmpty()) s = 1;\n      else if (input.isDone()) return new StringIteratee.Done(builder.state());\n    }\n    if (s === 4) {\n      while ((!input.isEmpty() || input.isDone()) && value.isCont()) value = value.feed(input);\n      if (value.isDone()) {\n        builder = builder || new ValueBuilder();\n        builder.appendValue(value.state());\n        return new StringIteratee.Done(builder.state());\n      }\n      else if (value.isError()) return value;\n    }\n    if (s === 5) {\n      while ((!input.isEmpty() || input.isDone()) && value.isCont()) value = value.feed(input);\n      if (value.isDone()) return new StringIteratee.Done(builder.state());\n      else if (value.isError()) return value;\n    }\n  }\n  return new InlineValueParser(builder, field, value, s);\n};\n\n\nfunction RecordParser(builder, key, value, s) {\n  StringIteratee.call(this);\n  this.builder = builder || null;\n  this.key = key || null;\n  this.value = value || null;\n  this.s = s || 1;\n}\nRecordParser.prototype = Object.create(StringIteratee.prototype);\nRecordParser.prototype.constructor = RecordParser;\nRecordParser.prototype.feed = function (input) {\n  var c = 0;\n  var s = this.s;\n  var value = this.value;\n  var key = this.key;\n  var builder = this.builder || new RecordBuilder();\n  if (s === 1) {\n    if (!input.isEmpty()) {\n      c = input.head();\n      if (c === 123/*'{'*/) {\n        input.step();\n        s = 2;\n      }\n      else return new StringIteratee.Error({expected: '\\'{\\'', found: c});\n    }\n    else if (input.isDone()) return StringIteratee.unexpectedEOF;\n  }\n  while (!input.isEmpty() || input.isDone()) {\n    if (s === 2) {\n      while (!input.isEmpty() && (c = input.head(), isWhitespace(c))) input.step();\n      if (!input.isEmpty()) {\n        if (c === 125/*'}'*/) {\n          input.step();\n          return new StringIteratee.Done(builder.state());\n        }\n        else s = 3;\n      }\n      else if (input.isDone()) return StringIteratee.unexpectedEOF;\n    }\n    if (s === 3) {\n      key = key || new BlockValueParser();\n      while ((!input.isEmpty() || input.isDone()) && key.isCont()) key = key.feed(input);\n      if (key.isDone()) s = 4;\n      else if (key.isError()) return key;\n    }\n    if (s === 4) {\n      while (!input.isEmpty() && (c = input.head(), isSpace(c))) input.step();\n      if (!input.isEmpty()) {\n        if (c === 58/*':'*/) {\n          input.step();\n          s = 5;\n        }\n        else {\n          builder.appendValue(key.state());\n          key = null;\n          s = 7;\n        }\n      }\n      else if (input.isDone()) {\n        builder.appendValue(key.state());\n        return new StringIteratee.Done(builder.state());\n      }\n    }\n    if (s === 5) {\n      while (!input.isEmpty() && isSpace(input.head())) input.step();\n      if (!input.isEmpty()) s = 6;\n      else if (input.isDone()) {\n        builder.appendField(new Slot(key.state()));\n        return new StringIteratee.Done(builder.state());\n      }\n    }\n    if (s === 6) {\n      value = value || new BlockValueParser();\n      while ((!input.isEmpty() || input.isDone()) && value.isCont()) value = value.feed(input);\n      if (value.isDone()) {\n        builder.appendField(new Slot(key.state(), value.state()));\n        key = null;\n        value = null;\n        s = 7;\n      }\n      else if (value.isError()) return value;\n    }\n    if (s === 7) {\n      while (!input.isEmpty() && (c = input.head(), isSpace(c))) input.step();\n      if (!input.isEmpty()) {\n        if (c === 44/*','*/ || c === 59/*';'*/ || isNewline(c)) {\n          input.step();\n          s = 2;\n        }\n        else if (c === 125/*'}'*/) {\n          input.step();\n          return new StringIteratee.Done(builder.state());\n        }\n       else return new StringIteratee.Error({expected: '\\'}\\', \\';\\', \\',\\', or newline', found: c});\n      }\n      else if (input.isDone()) return StringIteratee.unexpectedEOF;\n    }\n  }\n  return new RecordParser(builder, key, value, s);\n};\n\n\nfunction MarkupParser(builder, text, value, s) {\n  StringIteratee.call(this);\n  this.builder = builder || null;\n  this.text = text || null;\n  this.value = value || null;\n  this.s = s || 1;\n}\nMarkupParser.prototype = Object.create(StringIteratee.prototype);\nMarkupParser.prototype.constructor = MarkupParser;\nMarkupParser.prototype.feed = function (input) {\n  var c = 0;\n  var s = this.s;\n  var value = this.value;\n  var text = this.text;\n  var builder = this.builder;\n  if (s === 1) {\n    if (!input.isEmpty()) {\n      c = input.head();\n      if (c === 91/*'['*/) {\n        input.step();\n        s = 2;\n      }\n      else return new StringIteratee.Error({expected: '\\'[\\'', found: c});\n    }\n    else if (input.isDone()) return StringIteratee.unexpectedEOF;\n  }\n  while (!input.isEmpty() || input.isDone()) {\n    if (s === 2) {\n      while (!input.isEmpty() && (c = input.head(),\n          c !== 64/*'@'*/ &&\n          c !== 91/*'['*/ &&\n          c !== 92/*'\\\\'*/ &&\n          c !== 93/*']'*/ &&\n          c !== 123/*'{'*/ &&\n          c !== 125/*'}'*/)) {\n        input.step();\n        text = text || new StringBuilder();\n        text.append(c);\n      }\n      if (!input.isEmpty()) {\n        if (c === 93/*']'*/) {\n          input.step();\n          if (!builder) {\n            if (!text) text = text || new StringBuilder();\n            return new StringIteratee.Done(text.state());\n          }\n          else {\n            if (text) builder.appendValue(text.state());\n            return new StringIteratee.Done(builder.state());\n          }\n        }\n        else if (c === 64/*'@'*/) {\n          builder = builder || new RecordBuilder();\n          if (text) {\n            builder.appendValue(text.state());\n            text = null;\n          }\n          value = new InlineValueParser();\n          s = 3;\n        }\n        else if (c === 123/*'{'*/) {\n          builder = builder || new RecordBuilder();\n          if (text) {\n            builder.appendValue(text.state());\n            text = null;\n          }\n          value = new RecordParser(builder);\n          s = 4;\n        }\n        else if (c === 91/*'['*/) {\n          builder = builder || new RecordBuilder();\n          if (text) {\n            builder.appendValue(text.state());\n            text = null;\n          }\n          value = new MarkupParser(builder);\n          s = 4;\n        }\n        else if (c === 92/*'\\\\'*/) {\n          input.step();\n          s = 5;\n        }\n        else new StringIteratee.Error({found: c});\n      }\n      else if (input.isDone()) return StringIteratee.unexpectedEOF;\n    }\n    if (s === 3) {\n      while ((!input.isEmpty() || input.isDone()) && value.isCont()) value = value.feed(input);\n      if (value.isDone()) {\n        builder.appendValue(value.state());\n        value = null;\n        s = 2;\n      }\n      else if (value.isError()) return value;\n    }\n    if (s === 4) {\n      while ((!input.isEmpty() || input.isDone()) && value.isCont()) value = value.feed(input);\n      if (value.isDone()) {\n        value = null;\n        s = 2;\n      }\n      else if (value.isError()) return value;\n    }\n    if (s === 5) {\n      if (!input.isEmpty()) {\n        c = input.head();\n        text = text || new StringBuilder();\n        if (c === 34/*'\"'*/ ||\n            c === 47/*'/'*/ ||\n            c === 64/*'@'*/ ||\n            c === 91/*'['*/ ||\n            c === 92/*'\\\\'*/ ||\n            c === 93/*']'*/ ||\n            c === 123/*'{'*/ ||\n            c === 125/*'}'*/) {\n          input.step();\n          text.append(c);\n          s = 2;\n        }\n        else if (c === 98/*'b'*/) {\n          input.step();\n          text.append(8/*'\\b'*/);\n          s = 2;\n        }\n        else if (c === 102/*'f'*/) {\n          input.step();\n          text.append(12/*'\\f'*/);\n          s = 2;\n        }\n        else if (c === 110/*'n'*/) {\n          input.step();\n          text.append(10/*'\\n'*/);\n          s = 2;\n        }\n        else if (c === 114/*'r'*/) {\n          input.step();\n          text.append(13/*'\\r'*/);\n          s = 2;\n        }\n        else if (c === 116/*'t'*/) {\n          input.step();\n          text.append(9/*'\\t'*/);\n          s = 2;\n        }\n        else return new StringIteratee.Error({expected: 'escape character', found: c});\n      }\n      else if (input.isDone()) return StringIteratee.unexpectedEOF;\n    }\n  }\n  return new MarkupParser(builder, text, value, s);\n};\n\n\nfunction StringParser(text, s) {\n  StringIteratee.call(this);\n  this.text = text || null;\n  this.s = s || 1;\n}\nStringParser.prototype = Object.create(StringIteratee.prototype);\nStringParser.prototype.constructor = StringParser;\nStringParser.prototype.feed = function (input) {\n  var c = 0;\n  var s = this.s;\n  var text = this.text;\n  if (s === 1) {\n    if (!input.isEmpty() && (c = input.head(), c === 34/*'\"'*/)) {\n      input.step();\n      s = 2;\n    }\n    else if (!input.isEmpty()) return new StringIteratee.Error({expected: '\\'\"\\'', found: c});\n    else if (input.isDone()) return StringIteratee.unexpectedEOF;\n  }\n  while (!input.isEmpty() || input.isDone()) {\n    if (s === 2) {\n      text = text || new StringBuilder();\n      while (!input.isEmpty() && (c = input.head(), c !== 34/*'\"'*/ && c !== 92/*'\\\\'*/)) {\n        input.step();\n        text.append(c);\n      }\n      if (!input.isEmpty()) {\n        if (c === 34/*'\"'*/) {\n          input.step();\n          return new StringIteratee.done(text.state());\n        }\n        else if (c === 92/*'\\\\'*/) {\n          input.step();\n          s = 3;\n        }\n      }\n      else if (input.isDone()) return StringIteratee.unexpectedEOF;\n    }\n    if (s === 3) {\n      if (!input.isEmpty()) {\n        c = input.head();\n        if (c === 34/*'\"'*/ ||\n            c === 47/*'/'*/ ||\n            c === 64/*'@'*/ ||\n            c === 91/*'['*/ ||\n            c === 92/*'\\\\'*/ ||\n            c === 93/*']'*/ ||\n            c === 123/*'{'*/ ||\n            c === 125/*'}'*/) {\n          input.step();\n          text.append(c);\n          s = 2;\n        }\n        else if (c === 98/*'b'*/) {\n          input.step();\n          text.append(8/*'\\b'*/);\n          s = 2;\n        }\n        else if (c === 102/*'f'*/) {\n          input.step();\n          text.append(12/*'\\f'*/);\n          s = 2;\n        }\n        else if (c === 110/*'n'*/) {\n          input.step();\n          text.append(10/*'\\n'*/);\n          s = 2;\n        }\n        else if (c === 114/*'r'*/) {\n          input.step();\n          text.append(13/*'\\r'*/);\n          s = 2;\n        }\n        else if (c === 116/*'t'*/) {\n          input.step();\n          text.append(9/*'\\t'*/);\n          s = 2;\n        }\n        else return new StringIteratee.Error({expected: 'escape character', found: c});\n      }\n      else if (input.isDone()) return StringIteratee.unexpectedEOF;\n    }\n  }\n  return new StringParser(text, s);\n};\n\n\nfunction DataParser(data, s) {\n  StringIteratee.call(this);\n  this.data = data || null;\n  this.s = s || 1;\n}\nDataParser.prototype = Object.create(StringIteratee.prototype);\nDataParser.prototype.constructor = DataParser;\nDataParser.prototype.feed = function (input) {\n  var c = 0;\n  var s = this.s;\n  var data = this.data || new DataBuilder()();\n  if (s === 1) {\n    if (!input.isEmpty() && (c = input.head(), c === 37/*'%'*/)) {\n      input.step();\n      s = 2;\n    }\n    else if (!input.isEmpty()) return new StringIteratee.Error({expected: '\\'%\\'', found: c});\n    else if (input.isDone()) return StringIteratee.unexpectedEOF;\n  }\n  while (!input.isEmpty() || input.isDone()) {\n    if (s === 2) {\n      if (!input.isEmpty() && (c = input.head(), isBase64Char(c))) {\n        input.step();\n        data.appendBase64Char(c);\n        s = 3;\n      }\n      else if (!input.isEmpty() || input.isDone()) return new StringIteratee.Done(data.state());\n    }\n    if (s === 3) {\n      if (!input.isEmpty() && (c = input.head(), isBase64Char(c))) {\n        input.step();\n        data.appendBase64Char(c);\n        s = 4;\n      }\n      else if (!input.isEmpty()) return new StringIteratee.Error({expected: 'base64 digit', found: c});\n      else if (input.isDone()) return StringIteratee.unexpectedEOF;\n    }\n    if (s === 4) {\n      if (!input.isEmpty() && (c = input.head(), isBase64Char(c) || c === 61/*'='*/)) {\n        input.step();\n        data.appendBase64Char(c);\n        if (c !== 61/*'='*/) s = 5;\n        else s = 6;\n      }\n      else if (!input.isEmpty()) return new StringIteratee.Error({expected: 'base64 digit', found: c});\n      else if (input.isDone()) return StringIteratee.unexpectedEOF;\n    }\n    if (s === 5) {\n      if (!input.isEmpty() && (c = input.head(), isBase64Char(c) || c === 61/*'='*/)) {\n        input.step();\n        data.appendBase64Char(c);\n        if (c !== 61/*'='*/) s = 2;\n        else return new StringIteratee.Done(data.state());\n      }\n      else if (!input.isEmpty()) return new StringIteratee.Error({expected: 'base64 digit', found: c});\n      else if (input.isDone()) return StringIteratee.unexpectedEOF;\n    }\n    else if (s === 6) {\n      if (!input.isEmpty() && (c = input.head(), c === 61/*'='*/)) {\n        input.step();\n        data.appendBase64Char(c);\n        return new StringIteratee.Done(data.state());\n      }\n      else if (!input.isEmpty()) return new StringIteratee.Error({expected: '\\'=\\'', found: c});\n      else if (input.isDone()) return StringIteratee.unexpectedEOF;\n    }\n  }\n  return new DataParser(data, s);\n};\n\n\nfunction NumberParser(builder, s) {\n  StringIteratee.call(this);\n  this.builder = builder || null;\n  this.s = s || 1;\n}\nNumberParser.prototype = Object.create(StringIteratee.prototype);\nNumberParser.prototype.constructor = NumberParser;\nNumberParser.prototype.feed = function (input) {\n  var c = 0;\n  var s = this.s;\n  var builder = this.builder || new StringBuilder();\n  if (s === 1) {\n    if (!input.isEmpty()) {\n      c = input.head();\n      if (c === 45/*'-'*/) {\n        input.step();\n        builder.append(c);\n      }\n      s = 2;\n    }\n    else if (input.isDone()) return StringIteratee.unexpectedEOF;\n  }\n  if (s === 2) {\n    if (!input.isEmpty()) {\n      c = input.head();\n      if (c === 48/*'0'*/) {\n        input.step();\n        builder.append(c);\n        s = 4;\n      }\n      else if (c >= 49/*'1'*/ && c <= 57/*'9'*/) {\n        input.step();\n        builder.append(c);\n        s = 3;\n      }\n      else return new StringIteratee.Error({expected: 'digit', found: c});\n    }\n    else if (input.isDone()) return StringIteratee.unexpectedEOF;\n  }\n  if (s === 3) {\n    while (!input.isEmpty() && (c = input.head(), c >= 48/*'0'*/ && c <= 57/*'9'*/)) {\n      input.step();\n      builder.append(c);\n    }\n    if (!input.isEmpty()) s = 4;\n    else if (input.isDone()) return new StringIteratee.Done(Number(builder.state()));\n  }\n  if (s === 4) {\n    if (!input.isEmpty()) {\n      c = input.head();\n      if (c === 46/*'.'*/) {\n        input.step();\n        builder.append(c);\n        s = 5;\n      }\n      else if (c === 69/*'E'*/ || c === 101/*'e'*/) {\n        input.step();\n        builder.append(c);\n        s = 8;\n      }\n      else return new StringIteratee.Done(Number(builder.state()));\n    }\n    else if (input.isDone()) return new StringIteratee.Done(Number(builder.state()));\n  }\n  if (s === 5) {\n    if (!input.isEmpty()) {\n      c = input.head();\n      if (c >= 48/*'0'*/ && c <= 57/*'9'*/) {\n        input.step();\n        builder.append(c);\n        s = 6;\n      }\n      else return new StringIteratee.Error({expected: 'digit', found: c});\n    }\n    else if (input.isDone()) return StringIteratee.unexpectedEOF;\n  }\n  if (s === 6) {\n    while (!input.isEmpty() && (c = input.head(), c >= 48/*'0'*/ && c <= 57/*'9'*/)) {\n      input.step();\n      builder.append(c);\n    }\n    if (!input.isEmpty()) s = 7;\n    else if (input.isDone()) return new StringIteratee.Done(Number(builder.state()));\n  }\n  if (s === 7) {\n    c = input.head();\n    if (c === 69/*'E'*/ || c === 101/*'e'*/) {\n      input.step();\n      builder.append(c);\n      s = 8;\n    }\n    else return new StringIteratee.Done(Number(builder.state()));\n  }\n  if (s === 8) {\n    if (!input.isEmpty()) {\n      c = input.head();\n      if (c === 43/*'+'*/ || c === 45/*'-'*/) {\n        input.step();\n        builder.append(c);\n      }\n      s = 9;\n    }\n    else if (input.isDone()) return StringIteratee.unexpectedEOF;\n  }\n  if (s === 9) {\n    if (!input.isEmpty()) {\n      c = input.head();\n      if (c >= 48/*'0'*/ && c <= 57/*'9'*/) {\n        input.step();\n        builder.append(c);\n        s = 10;\n      }\n      else return new StringIteratee.Error({expected: 'digit', found: c});\n    }\n    else if (input.isDone()) return StringIteratee.unexpectedEOF;\n  }\n  if (s === 10) {\n    while (!input.isEmpty() && (c = input.head(), c >= 48/*'0'*/ && c <= 57/*'9'*/)) {\n      input.step();\n      builder.append(c);\n    }\n    if (!input.isEmpty() || input.isDone()) return new StringIteratee.Done(Number(builder.state()));\n  }\n  return new NumberParser(builder, s);\n};\n\nfunction IdentParser(builder, s) {\n  StringIteratee.call(this);\n  this.builder = builder || null;\n  this.s = s || 1;\n}\nIdentParser.prototype = Object.create(StringIteratee.prototype);\nIdentParser.prototype.constructor = IdentParser;\nIdentParser.prototype.feed = function (input) {\n  var c = 0;\n  var s = this.s;\n  var builder = this.builder;\n  if (s === 1) {\n    if (!input.isEmpty() && (c = input.head(), isNameStartChar(c))) {\n      builder = builder || new StringBuilder();\n      input.step();\n      builder.append(c);\n      s = 2;\n    }\n    else if (!input.isEmpty()) return new StringIteratee.Error({expected: 'identitifer', found: c});\n    else if (input.isDone()) return StringIteratee.unexpectedEOF;\n  }\n  if (s === 2) {\n    while (!input.isEmpty() && (c = input.head(), isNameChar(c))) {\n      input.step();\n      builder.append(c);\n    }\n    if (!input.isEmpty() || input.isDone()) return new StringIteratee.Done(builder.state());\n  }\n  return new IdentParser(builder, s);\n};\n\n\nmodule.exports = function () {};\nexports = module.exports;\nexports.Field = Field;\nexports.Attr = Attr;\nexports.Slot = Slot;\nexports.Record = Record;\nexports.Extant = Extant;\nexports.Absent = Absent;\nexports.RecordBuilder = RecordBuilder;\nexports.ValueBuilder = ValueBuilder;\nexports.parse = parse;\n\n},{}]},{},[1])(1)\n});"],"sourceRoot":"/source/"}